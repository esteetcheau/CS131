The performance difference of kenken vs plain_kenken:


| ?- statistics, kenken(
  4,
  [
   +(6, [[1|1], [1|2], [2|1]]),
   *(96, [[1|3], [1|4], [2|2], [2|3], [2|4]]),
   -(1, [3|1], [3|2]),
   -(1, [4|1], [4|2]),
   +(8, [[3|3], [4|3], [4|4]]),
   *(2, [[3|4]])
  ],
  T
), write(T), nl, fail.
Memory               limit         in use            free

   trail  stack      16383 Kb            0 Kb        16383 Kb
   cstr   stack      16384 Kb            0 Kb        16384 Kb
   global stack      32767 Kb            3 Kb        32764 Kb
   local  stack      16383 Kb            0 Kb        16383 Kb
   atom   table      32768 atoms      1820 atoms     30948 atoms

Times              since start      since last

   user   time       1.572 sec       0.022 sec
   system time       0.035 sec       0.002 sec
   cpu    time       1.607 sec       0.024 sec
   real   time    2407.598 sec     165.629 sec
[[1,2,3,4],[3,4,2,1],[4,3,1,2],[2,1,4,3]]
[[1,2,4,3],[3,4,2,1],[4,3,1,2],[2,1,3,4]]
[[3,2,4,1],[1,4,2,3],[4,3,1,2],[2,1,3,4]]
[[2,1,3,4],[3,4,2,1],[4,3,1,2],[1,2,4,3]]
[[2,1,4,3],[3,4,2,1],[4,3,1,2],[1,2,3,4]]
[[3,1,2,4],[2,4,3,1],[4,3,1,2],[1,2,4,3]]

(1 ms) no


| ?- statistics, plain_kenken(
  4,
  [
   +(6, [[1|1], [1|2], [2|1]]),
   *(96, [[1|3], [1|4], [2|2], [2|3], [2|4]]),
   -(1, [3|1], [3|2]),
   -(1, [4|1], [4|2]),
   +(8, [[3|3], [4|3], [4|4]]),
   *(2, [[3|4]])
  ],
  T
), write(T), nl, fail.
Memory               limit         in use            free

   trail  stack      16383 Kb            0 Kb        16383 Kb
   cstr   stack      16384 Kb            0 Kb        16384 Kb
   global stack      32767 Kb            3 Kb        32764 Kb
   local  stack      16383 Kb            0 Kb        16383 Kb
   atom   table      32768 atoms      1824 atoms     30944 atoms

Times              since start      since last

   user   time       1.575 sec       0.003 sec
   system time       0.042 sec       0.007 sec
   cpu    time       1.617 sec       0.010 sec
   real   time    2472.723 sec      65.125 sec
[[1,2,3,4],[3,4,2,1],[4,3,1,2],[2,1,4,3]]
[[1,2,4,3],[3,4,2,1],[4,3,1,2],[2,1,3,4]]
[[2,1,3,4],[3,4,2,1],[4,3,1,2],[1,2,4,3]]
[[2,1,4,3],[3,4,2,1],[4,3,1,2],[1,2,3,4]]
[[3,1,2,4],[2,4,3,1],[4,3,1,2],[1,2,4,3]]
[[3,2,4,1],[1,4,2,3],[4,3,1,2],[2,1,3,4]]

(1273 ms) no



To solve no-op KenKen using GNU Prolog:


noop_kenken_testcase(
  5,
  [
   (2, [[1|1], [1|2]]),
   (1, [[1|3], [2|3]]),
   (40, [[1|4], [1|5],[2|5]]),
   (8, [[2|1], [2|2]]),
   (1, [[2|4]]),
   (3, [[3|1],[3|2]]),
   (4, [[3|3],[4|2],[4|3]]),
   (2, [[3|4], [4|4]]),
   (4, [[3|5]]),
   (4, [[4|1]]),
   (2, [[4|5],[5|5]]),
   (1, [[5|1],[5|2]]),
   (7, [[5|3],[5|4]])
  ]
).

?- fd_set_vector_max(255), noop_kenken_testcase(N,C), kenken(N,C,T).

should output this (reindented to fit):
C = [2*[[1|1], [1|2]],
   1-[[1|3], [2|3]],
   40*[[1|4], [1|5],[2|5]],
   8+[[2|1], [2|2]],
   1+[[2|4]],
   3-[[3|1],[3|2]],
   4+[[3|3],[4|2],[4|3]],
   2-[[3|4], [4|4]],
   4+[[3|5]],
   4+[[4|1]],
   2-[[4|5],[5|5]],
   1-[[5|1],[5|2]],
   7+[[5|3],[5|4]]]
N = 5
T = [[1,2,3,4,5],
     [5,3,4,1,2],
     [2,5,1,3,4],
     [4,1,2,5,3],
     [3,4,5,2,1]] ? 

and if you respond with a ";" the next result should be "no".








